{"mappings":"AAAA,MAAM,QAAQ,SAAS,cAAc,CAAC;AAEtC,MAAM,cAAc,IAAM;IACxB,OAAO,IAAI,QAAQ,CAAA,UAAW;QAC5B,MAAM,YAAY,CAAC,QAAU;YAC3B,IAAI,MAAM,IAAI,EAAE,QAAQ,2BAA2B;gBACjD;gBACA,OAAO,mBAAmB,CAAC,WAAW;YACxC,CAAC;QACH;QACA,OAAO,gBAAgB,CAAC,WAAW;IACrC;AACF;AAEA,MAAM,OAAO,IAAM;IACjB,OAAO,IAAI,QAAQ,CAAA,UAAW;QAC5B,MAAM,UAAU,IAAI;QACpB,QAAQ,KAAK,CAAC,gBAAgB,CAAC,WAAW,IAAM;YAC9C,QAAQ,QAAQ,KAAK;QACvB;QACA,QAAQ,KAAK,CAAC,KAAK;QACnB,MAAM,aAAa,CAAC,WAAW,CAAC;YAC9B,KAAK;QACP,GAAG,KAAK;YAAC,QAAQ,KAAK;SAAC;IACzB;AACF;AAEA,MAAM,SAAS,CACb,MACA,gBACA,qBACG;IACH,OAAO,IAAI,QAAQ,CAAA,UAAW;QAC5B,MAAM,YAAY,CAAC,QAAU;YAC3B,IAAI,MAAM,IAAI,EAAE,QAAQ,oBAAoB;gBAC1C,QAAQ,MAAM,IAAI;gBAClB,oBAAoB,WAAW;YACjC,CAAC;QACH;QACA,KAAK,gBAAgB,CAAC,WAAW;QACjC,KAAK,WAAW,CAAC;IACnB;AACF;AAEC,CAAA,UAAY;IACX,MAAM;IACN,MAAM,OAAO,MAAM;IAEnB,MAAM,WAAW,MAAM,OACrB,MACA;QACE,KAAK;IACP,GACA;IAGF,MAAM,WAAW,MAAM,OACrB,MACA;QACE,KAAK,CAAC,sBAAsB,CAAC;IAC/B,GACA;IAGF,MAAM,gBAAgB,MAAM,OAC1B,MACA;QACE,KAAK,CAAC,4BAA4B,CAAC;IACrC,GACA,CAAC,qCAAqC,CAAC;IAGzC,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;AACd,CAAA","sources":["src/index.js"],"sourcesContent":["const frame = document.getElementById('frame');\n\nconst onBootstrap = () => {\n  return new Promise(resolve => {\n    const onMessage = (event) => {\n      if (event.data?.key === 'SWIT_AUTH_APP_BOOTSTRAP') {\n        resolve();\n        window.removeEventListener('message', onMessage);\n      }\n    }\n    window.addEventListener('message', onMessage);\n  })\n}\n\nconst init = () => {\n  return new Promise(resolve => {\n    const channel = new MessageChannel();\n    channel.port1.addEventListener('message', () => {\n      resolve(channel.port1);\n    });\n    channel.port1.start();\n    frame.contentWindow.postMessage({\n      key: 'SWIT_AUTH_HANDSHAKE_REQUEST'\n    }, '*', [channel.port2])\n  });\n}\n\nconst invoke = (\n  port,\n  requestMessage,\n  responseMessageKey\n) => {\n  return new Promise(resolve => {\n    const onMessage = (event) => {\n      if (event.data?.key === responseMessageKey) {\n        resolve(event.data);\n        removeEventListener('message', onMessage);\n      }\n    }\n    port.addEventListener('message', onMessage);\n    port.postMessage(requestMessage);\n  })\n}\n\n(async () => {\n  await onBootstrap();\n  const port = await init();\n\n  const testName = await invoke(\n    port,\n    {\n      key: 'SWIT_AUTH_HELLO',\n    },\n    'SWIT_AUTH_HELLO_RESPONSE'\n  );\n\n  const accounts = await invoke(\n    port,\n    {\n      key: `SWIT_AUTH_GET_ACCOUNTS`,\n    },\n    'SWIT_AUTH_GET_ACCOUNTS_RESPONSE',\n  );\n\n  const signedAccount = await invoke(\n    port,\n    {\n      key: `SWIT_AUTH_GET_SIGNED_ACCOUNT`,\n    },\n    `SWIT_AUTH_GET_SIGNED_ACCOUNT_RESPONSE`\n  );\n\n  console.log(accounts);\n  console.log(signedAccount);\n})();\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}